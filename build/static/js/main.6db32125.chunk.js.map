{"version":3,"sources":["assets/profile_pic.jpg","components/header/index.jsx","routes/_404.jsx","components/article/index.js","mock/bio.js","routes/home.jsx","routes/index.jsx","components/contact-card/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","app","useContext","AppContext","to","id","src","require","alt","phrase","useState","timer","setTimer","useEffect","interval","setInterval","clearInterval","setPhrase","article","map","section","className","key","title","paragraphs","par","substring","document","bio","path","exact","component","HomePage","_404Page","href","React","createContext","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mLAAAA,EAAOC,QAAU,IAA0B,yC,4IC+B5BC,G,YA1BA,WAEb,IAAIC,EAAMC,qBAAWC,GAErB,OACE,gCACE,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,mBAOF,6BAASC,GAAG,SACV,yBACEC,IAAKC,EAAQ,IACbC,IAAI,mBAEN,oDACA,4BAAKP,EAAIQ,Y,OCrBF,aAAO,IAAD,EACOC,mBAAS,GADhB,mBACZC,EADY,KACLC,EADK,KAEbX,EAAMC,qBAAWC,GAWvB,OATAU,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BH,EAASD,EAAQ,KAChB,KACH,OAAO,WACLK,cAAcF,OAIdH,EAAQ,EACH,kBAAC,IAAD,CAAUP,GAAG,OAGtBH,EAAIgB,UAAU,iCAGZ,0BAAMZ,GAAG,kBACP,8CAAoBM,GACpB,qCCvBS,G,MAAA,gBAAGO,EAAH,EAAGA,QAAH,OACb,oCACGA,EAAQC,KAAI,SAAAC,GACX,OACE,6BAASC,UAAU,YAAYC,IAAKF,EAAQG,OAC1C,wBAAIF,UAAU,SAASD,EAAQG,OAC/B,iCACGH,EAAQI,WAAWL,KAAI,SAAAM,GACtB,OAAO,uBAAGH,IAAKG,EAAIC,UAAU,EAAG,IAAKD,cCXpC,GACX,CACEF,MAAO,WACPC,WAAY,CAAC,yhBAAD,u7BAsBd,CACED,MAAO,6BACPC,WAAY,CAAC,2DAAD,kmGA2Cd,CACED,MAAO,kBACPC,WAAY,CAAC,krBAAD,kkCCnEH,aACb,IAAMvB,EAAMC,qBAAWC,GAKvB,OAHAwB,SAASJ,MAAQ,cACjBtB,EAAIgB,UAAU,yCAGZ,8BACE,kBAAC,EAAD,CAASC,QAASU,MCLT,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IAGjC,kBAAC,IAAD,CAAOD,UAAWE,MCVP,G,MAAA,kBACb,yBAAKZ,UAAU,gBACb,iDACA,uBAAGa,KAAK,6CAAR,eCAE/B,EAAagC,IAAMC,gBAiBVC,EAbH,WAAO,IAAD,EAEY3B,mBAAS,yCAFrB,mBAETD,EAFS,KAEDQ,EAFC,KAIhB,OACE,kBAACd,EAAWmC,SAAZ,CAAqBC,MAAO,CAAE9B,SAAQQ,cACpC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNcuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJpB,SAASqB,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6db32125.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_pic.7789b5d6.jpg\";","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from '../../App';\nimport \"./header.css\";\n\nconst Header = () => {\n\n  let app = useContext(AppContext);\n\n  return (\n    <header>\n      <nav>\n        <Link to=\"/\">RAMIRO BELTRAN</Link>\n        {/* <ul id=\"navigation\">\n          <Link to='/words'>Words</Link>\n          <Link to='/canvas'>Canvas</Link>\n        </ul> */}\n      </nav>\n\n      <section id=\"intro\">\n        <img\n          src={require(\"../../assets/profile_pic.jpg\")}\n          alt=\"ramiro beltran\"\n        />\n        <h1>Ramiro 'Ram' Beltran</h1>\n        <h2>{app.phrase}</h2>\n      </section>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { AppContext } from '../App';\n\nexport default () => {\n  const [timer, setTimer] = useState(7);\n  const app = useContext(AppContext);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(timer - 1);\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  if (timer < 0) {\n    return <Redirect to='/' />\n  }\n\n  app.setPhrase('Oops, Looks like you are lost')\n\n  return (\n    <main id=\"_404-container\">\n      <h2>Redirecting in {timer}</h2>\n      <h3>or</h3>\n    </main>\n  );\n};\n","import React from \"react\";\nimport \"./article.css\";\n\nexport default ({ article }) => (\n  <>\n    {article.map(section => {\n      return (\n        <article className=\"paragraph\" key={section.title}>\n          <h2 className=\"title\">{section.title}</h2>\n          <section>\n            {section.paragraphs.map(par => {\n              return <p key={par.substring(0, 5)}>{par}</p>;\n            })}\n          </section>\n        </article>\n      );\n    })}\n  </>\n);\n","export default [\n    {\n      title: \"About Me\",\n      paragraphs: [\n        `I am a professional Software Developer working in an Enterprise\n                environment, and have been for the last 3.5 years. It is very\n                different than when you are say, going to school, learning to code,\n                and/or being an indie developer. It means getting paid to do what you\n                love. It means continuing to educate yourself in the ever-evolving\n                world of code, latest technologies, and trends not just because you\n                want to, but because you have to.`,\n        `Before I worked for an enterprise, I considered myself an indie\n                developer, not really knowing what that meant either. I was doing some\n                web stuff, and building mobile apps, never earning anything worth\n                writing about. Really, anything that I wanted to work on, I built. I\n                could take my time, make all the decisions, and have complete creative\n                freedom. This is both a good and really bad thing. It means that your\n                project may get delayed or abandoned. It will most likely not take\n                into account various user types, and fail to test for all scenarios.\n                It means that you are accountable to no-one but yourself.`,\n        `Even though I really enjoy personal projects, working in an enterprise\n                has taught me to be a stronger developer, to hold myself accountable,\n                and to produce quality code.`\n      ]\n    },\n    {\n      title: \"What I love about Software\",\n      paragraphs: [\n        `To begin, it is everywhere. And it's not going anywhere.`,\n        `Think about it, cars have computers running code in them that control\n                everything from fuel injection to the brakes and more, medical devices\n                that monitor your vitals run on code, and cash registers are\n                practically all iPads now. I cant even remember the last time I\n                carried cash. Being both a good and bad thing, software exists in just\n                about everything these days. Setting aside all the negatives that come\n                with living in a society that is so totally dependent on code, and\n                there are many, I’d like to list a couple of things I love about\n                software.`,\n        `First, I like that it is a field with really low entrance\n                requirements. You can go from being a fast-food worker to an\n                entry-level developer in 6 months with the right attitude and work\n                ethic. It all (mostly) boils down to how much you are willing to put\n                in, which is mostly time. To become a Nurse or Doctor can be very\n                expensive and time-consuming. You have to attend classes in person for\n                years, and pass a grueling exam when you are done. Then, you have to\n                train under another medical professional for a time, and take\n                mandatory courses to maintain your license. When you are done, you’ve\n                got this huge debt that you racked up over the years (unless you found\n                other ways), and need that good salary just to pay it back. To be\n                clear, developing is NOT for everyone, and should NOT be done just\n                because of the pay, but if you like solving problems, and you can\n                repurpose the time spent binging Netflix to learning to code, you can\n                be a Software Developer. Remember, there are more job openings than\n                there are developers to fill them.`,\n        `Second, we are limited only by our imaginations when it comes to what\n                is possible in this space. If you wanted to build a game about pigs\n                that fly and eat clouds, all you would need is an environment like\n                Unity (free), and a little coding knowledge which can be learned\n                relatively quickly (also free). Sure you’ll need a computer to work\n                on, but many people have them nowadays, or can get a used one for next\n                to nothing (they depreciate faster than cars). Just ask around. I saw\n                the movie Ready Player One by Steven Spielberg a couple of months ago,\n                and thought about how life often imitates art, and many inventions\n                come from ideas in film. I know that there are many companies out\n                there working really hard on Virtual Reality headsets and content, and\n                other things being worked in secret. It's just a matter of time before\n                we are all spending most of our time in the Oasis. Wouldn’t be much\n                different than staring at our phones all day long.`\n      ]\n    },\n    {\n      title: \"A Personal Note\",\n      paragraphs: [\n        `I love music, and often code while listening to music. Sure I know\n                what you are thinking, \"Duh, Everyone loves music\". I mean that it\n                resonates with me because it is a form of creativity based firmly in\n                logic (music theory), and I love to make music. I am by nature,\n                creative, and if I am not able to express it, I go crazy. It's part of\n                what draws me to web development and software in general. You get to\n                draw something beautiful without having the skills with a pencil and\n                paper, or brush and canvas. You get to construct something out of\n                nothing.`,\n        `I had played guitar for about 7 years, then lost interest in it and\n                stopped cold turkey. Life also got busy, as it happens to do. I sold 4\n                guitars, and kept only my acoustic, which I very rarely play. I didn’t\n                lose interest in music or being creative, it was just the tool used to\n                create. Not too long ago, the music bug bit me again. I actually\n                purchased a piano in October of 2018 so that my son could learn to\n                play, knowing that it was something I had also wanted for myself.\n                Then, in December of the same year, after about 13 years without an\n                electric guitar, a Fender Telecaster called my name. And just this\n                morning (August 1, 2020), I picked up my acoustic, and it felt great.\n                Another thing I love about software is that there are so many\n                different tools involved, it's impossible to get bored. But if you do,\n                take some time, breathe, and build something just for fun.`\n      ]\n    }\n  ];","import React, { useContext } from \"react\";\nimport { AppContext } from '../App';\nimport Article from \"../components/article\";\nimport bio from '../mock/bio';\n\nexport default () => {\n  const app = useContext(AppContext);\n  \n  document.title = 'Ram Beltran';\n  app.setPhrase('I dabble in code; Sometimes it works.')\n\n  return (\n    <main>\n      <Article article={bio} />\n    </main>\n  );\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport _404Page from \"./_404\";\nimport HomePage from \"./home\";\n// import CanvasPage from \"./canvas\";\n// import WordsPage from \"./words\";\n\nexport default () => (\n  <Switch>\n    <Route path=\"/\" exact component={HomePage} />\n    {/* <Route path=\"/canvas\" component={CanvasPage} />\n    <Route path=\"/words\" component={WordsPage} /> */}\n    <Route component={_404Page} />\n  </Switch>\n);\n","import React from \"react\";\nimport \"./contactCard.css\";\n\nexport default () => (\n  <div className=\"contact-card\">\n    <p>Connect with me on</p>\n    <a href=\"https://www.linkedin.com/in/ramirobeltran\">\n        LinkedIn\n      </a>\n  </div>\n);\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header\";\nimport Routes from \"./routes\";\nimport ContactCard from \"./components/contact-card\";\n\nconst AppContext = React.createContext();\n\nexport { AppContext };\n\nconst App = () => {\n\n  const [phrase, setPhrase] = useState('I dabble in code; Sometimes it works.')\n  \n  return (\n    <AppContext.Provider value={{ phrase, setPhrase }}>\n      <Header />\n      <Routes />\n      <ContactCard />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}